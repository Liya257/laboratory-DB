drop table Товар
CREATE TABLE Товар (
	КодТовара int GENERATED BY DEFAULT AS IDENTITY 
    (START WITH 1 INCREMENT BY 1),
	Название VARCHAR(50), 
	Цена MONEY,
	Тип VARCHAR(50), 
	Сорт VARCHAR(50), 
	Город VARCHAR(50),
	Остаток INT
)
ALTER TABLE Товар ADD column Налог numeric as (Цена*0.05)
create table faculty(
	kod_faculteta serial primary key not null unique,
	name_faculteta varchar(75) not null,
	fio_decana varchar(100) not null,
	nomer_kab char(5) not null,
	tel_decan char(50) not null
)
create table kafedra(
	kod_kafedry serial primary key not null unique,
	facultet_kod_faculteta int not null,
	name_kafedry varchar(75) not null,
	fio_zavkaf varchar(75) not null,
	nomer_kab int not null,
	num_korpusa int not null,
	tel_kafedry int not null,
	constraint fk_facultet_kafedra foreign key (facultet_kod_faculteta) references faculty (kod_faculteta)
)
create table students(
	student_id serial unique not null primary key,
	sutname varchar(50) not null,
	sutfname varchar(50) not null,
	stipend numeric check(stipend < 500) not null,
	kurs int CHECK (kurs IN (1, 2,3,4)),
	city varchar(75) not null,
	birthday date not null,
	group_student varchar(15) not null,
	kafedra_kod_kafedry int not null,
	constraint fk_student_kafedra foreign key (kafedra_kod_kafedry) references kafedra (kod_kafedry)
)
CREATE TYPE dolgnost AS ENUM ('профессор','доцент','старший преподаватель','ассистент');
create type pol as enum ('Ж','ж','м','М')
create type zvanie as enum ('к.т.н','к.г.у','к.с.н','к.ф.м.н','д.т.н','д.г.у','д.с.н','д.ф.м.н','нет');
create table teacher(
	kod_teacher serial primary key not null,
	kafedra_kod_kafedry int not null,
	name_teacher varchar(75) not null,
	idef_kod int unique not null,
	dolgnost dolgnost default 'ассистент',
	zvanie zvanie default 'нет',
	salary numeric check(salary > 0) default 1000,
	rise int check(rise >= 0) default 0,
	data_hire date default (now() at time zone 'utc'),
	birthday date not null,
	pol pol not null,
	tel_teacher char(75) not null,
	constraint fk_kafedra_teacher foreign key (kafedra_kod_kafedry) references kafedra(kod_kafedry)
)
